[tool.poetry]
name = "linkedin-bot"
version = "0.1.0"
description = "Bot to manage account activity."
authors = ["fenya-rq <fenyochek@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "3.13.5"
ruff = "0.11.5"
pytest = "8.3.5"
beautifulsoup4 = "4.13.3"
playwright = "1.51.0"
python-dotenv = "1.1.0"
asyncio = "3.4.3"
pytest-mock = "3.14.0"
pytest-asyncio = "0.26.0"
pytest-cov = "6.1.1"
aiohttp = "3.12.0"
langchain = "0.3.26"
langgraph = "0.5.1"
langchain-google-genai = "2.1.6"
pyperclip = "1.9.0"
aiofiles = "24.1.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "4.2.0"
mypy = "1.15.0"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
testpaths = ["tests"]
norecursedirs = [".git", ".tox", ".nox", ".venv", ".env", "build", "dist"]

[tool.ruff]
line-length = 100
output-format = "grouped"
exclude = [".venv", "files", "parser.log", "example*.py"]

[tool.ruff.format]
docstring-code-format = true
quote-style = "single"

[tool.ruff.lint]
select = [
    "E", "F", "W", "C90",  # Flake 8 (pycodestyle, pyflakes, mccabe)
    "N",  # pep8-naming
    "I",  # isort
    "S",  # Bandit (particulary)
]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["S101"]
"tests/**/*.py" = ["S101"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.lint.pycodestyle]
max-line-length = 100


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
